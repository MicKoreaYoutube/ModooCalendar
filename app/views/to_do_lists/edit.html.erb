<!DOCTYPE html>
<html lang="ko">
	<head>
		<meta charset="UTF-8" />
		<title>M캘린더 - 내 캘린더</title>
		<script>
			$(document).ready(function () {
				calendarInit();
			});
			/*
    달력 렌더링 할 때 필요한 정보 목록 

    현재 월(초기값 : 현재 시간)
    금월 마지막일 날짜와 요일
    전월 마지막일 날짜와 요일
*/

			function calendarInit() {
				// 날짜 정보 가져오기
				var date = new Date(); // 현재 날짜(로컬 기준) 가져오기
				var utc = date.getTime() + date.getTimezoneOffset() * 60 * 1000; // uct 표준시 도출
				var kstGap = 9 * 60 * 60 * 1000; // 한국 kst 기준시간 더하기
				var today = new Date(utc + kstGap); // 한국 시간으로 date 객체 만들기(오늘)

				var thisMonth = new Date(today.getFullYear(), today.getMonth(), today.getDate());
				// 달력에서 표기하는 날짜 객체

				var currentYear = thisMonth.getFullYear(); // 달력에서 표기하는 연
				var currentMonth = thisMonth.getMonth(); // 달력에서 표기하는 월
				var currentDate = thisMonth.getDate(); // 달력에서 표기하는 일

				// kst 기준 현재시간
				// console.log(thisMonth);

				// 캘린더 렌더링
				renderCalender(thisMonth);

				function renderCalender(thisMonth) {
					// 렌더링을 위한 데이터 정리
					currentYear = thisMonth.getFullYear();
					currentMonth = thisMonth.getMonth();
					currentDate = thisMonth.getDate();

					// 이전 달의 마지막 날 날짜와 요일 구하기
					var startDay = new Date(currentYear, currentMonth, 0);
					var prevDate = startDay.getDate();
					var prevDay = startDay.getDay();

					// 이번 달의 마지막날 날짜와 요일 구하기
					var endDay = new Date(currentYear, currentMonth + 1, 0);
					var nextDate = endDay.getDate();
					var nextDay = endDay.getDay();

					// console.log(prevDate, prevDay, nextDate, nextDay);

					// 현재 월 표기
					$('.year-month').text(currentYear + '.' + (currentMonth + 1));

					// 렌더링 html 요소 생성
					calendar = document.querySelector('.dates');
					calendar.innerHTML = '';

					// 지난달
					for (var i = prevDate - prevDay + 1; i <= prevDate; i++) {
						calendar.innerHTML =
							calendar.innerHTML + '<div class="day prev disable">' + i + '</div>';
					}
					// 이번달
					for (var i = 1; i <= nextDate; i++) {
						calendar.innerHTML =
							calendar.innerHTML + '<section class="day current">' + i + '</section>';
					}
					// 다음달
					for (var i = 1; i <= (7 - nextDay == 7 ? 0 : 7 - nextDay); i++) {
						calendar.innerHTML =
							calendar.innerHTML + '<div class="day next disable">' + i + '</div>';
					}

					// 오늘 날짜 표기
					if (today.getMonth() == currentMonth) {
						todayDate = today.getDate();
						var currentMonthDate = document.querySelectorAll('.dates .current');
						currentMonthDate[todayDate - 1].classList.add('today');
					}
				}

				// 이전달로 이동
				$('.go-prev').on('click', function () {
					thisMonth = new Date(currentYear, currentMonth - 1, 1);
					renderCalender(thisMonth);
				});

				// 다음달로 이동
				$('.go-next').on('click', function () {
					thisMonth = new Date(currentYear, currentMonth + 1, 1);
					renderCalender(thisMonth);
				});

				//날짜 선택
				$(document).on('click', "section.current", function () {
					location.href = '/to_do_lists'
				});

				//내용 수정
				$('.worklist').on('click', function () {
					var link = '/to_do_lists/' + this.getAttribute('alt') + '/edit';
					location.href = link;
				});

				//날짜 띄우기
				var date = document.getElementsByClassName("form-control")[1].alt
				document.getElementById("date").value = date;
				document.getElementById('lookDate').innerHTML = '날짜: ' + document.getElementById('date').value;
				var dom = document.getElementsByClassName('worklist');
				var dom2 = document.getElementsByClassName('div');
				for (var i = 0; i <= dom.length - 1; i++) {
					var worklist = document.getElementsByClassName('worklist');
					if (worklist[i].id == document.getElementById('date').value) {
						dom2[i].style.display = 'block';
					}
					else {
						dom2[i].style.display = 'none';
					}
				}
			}

			//반응형 만들기
			function myFunction(x) {
				if (x.matches) {
					// If media query matches
					$('#main').removeClass('flex-row');
					$('.p-2').removeClass('all');
					$('#main').addClass('flex-column');
					$('.p-2').addClass('all2');
				} else {
					$('#main').removeClass('flex-column');
					$('.p-2').removeClass('all2');
					$('.p-2').addClass('all');
					$('#main').addClass('flex-row');
				}
			}

			var x = window.matchMedia('(max-width: 1160px)');
			myFunction(x); // Call listener function at run time
			x.addListener(myFunction); // Attach listener function on state changes
		</script>
		<style>
			/* section calendar */

			.sec_cal {
				width: 360px;
				margin: 0 auto;
				font-family: 'NotoSansR';
			}

			.sec_cal .cal_nav {
				display: flex;
				justify-content: center;
				align-items: center;
				font-weight: 700;
				font-size: 48px;
				line-height: 78px;
			}

			.sec_cal .cal_nav .year-month {
				width: 300px;
				text-align: center;
				line-height: 1;
			}

			.sec_cal .cal_nav .nav {
				display: flex;
				border: 1px solid #333333;
				border-radius: 5px;
			}

			.sec_cal .cal_nav .go-prev,
			.sec_cal .cal_nav .go-next {
				display: block;
				width: 50px;
				height: 78px;
				font-size: 0;
				display: flex;
				justify-content: center;
				align-items: center;
			}

			.sec_cal .cal_nav .go-prev::before,
			.sec_cal .cal_nav .go-next::before {
				content: '';
				display: block;
				width: 20px;
				height: 20px;
				border: 3px solid #000;
				border-width: 3px 3px 0 0;
				transition: border 0.1s;
			}

			.sec_cal .cal_nav .go-prev:hover::before,
			.sec_cal .cal_nav .go-next:hover::before {
				border-color: #ed2a61;
			}

			.sec_cal .cal_nav .go-prev::before {
				transform: rotate(-135deg);
			}

			.sec_cal .cal_nav .go-next::before {
				transform: rotate(45deg);
			}

			.sec_cal .cal_wrap {
				padding-top: 40px;
				position: relative;
				margin: 0 auto;
			}

			.sec_cal .cal_wrap .days {
				display: flex;
				margin-bottom: 20px;
				padding-bottom: 20px;
				border-bottom: 1px solid #ddd;
			}

			.sec_cal .cal_wrap::after {
				top: 368px;
			}

			.sec_cal .cal_wrap .day {
				display: flex;
				align-items: center;
				justify-content: center;
				width: calc(100% / 7);
				text-align: left;
				color: #999;
				font-size: 12px;
				text-align: center;
				border-radius: 5px;
			}

			.current.today {
				background: rgb(242 242 242);
			}

			.current.selected {
				background: #c9c9c9;
			}

			.sec_cal .cal_wrap .dates {
				display: flex;
				flex-flow: wrap;
				height: 290px;
			}

			.sec_cal .cal_wrap .day:nth-child(7n -1) {
				color: #3c6ffa;
			}

			.sec_cal .cal_wrap .day:nth-child(7n) {
				color: #ed2a61;
			}

			.sec_cal .cal_wrap .day.disable {
				color: #ddd;
			}
		</style>
	</head>
	<body>
		<div
			class="d-flex flex-column mb-3 position-absolute start-50 translate-middle-x all"
			id="main"
		>
			<div class="p-2 all">
				<div class="sec_cal">
					<div class="cal_nav">
						<a href="javascript:;" class="nav-btn go-prev">prev</a>
						<div class="year-month"></div>
						<a href="javascript:;" class="nav-btn go-next">next</a>
					</div>
					<div class="cal_wrap">
						<div class="days">
							<div class="day">MON</div>
							<div class="day">TUE</div>
							<div class="day">WED</div>
							<div class="day">THU</div>
							<div class="day">FRI</div>
							<div class="day">SAT</div>
							<div class="day">SUN</div>
						</div>
						<div class="dates"></div>
					</div>
				</div>
				<!--코드 출처: https://songsong.dev/11-->
			</div>
			<br><br><br><br><br>
			<div class="p-2 all">
				<form action="/to_do_lists" method="post">
					<p id="lookDate">날짜:</p>
					<input
						name="authenticity_token"
						value="<%= form_authenticity_token %>"
						type="hidden"
					/>
					<input type="hidden" name="date" id="date" value="" required />
					<div class="input-group">
						<span class="input-group-text" id="basic-addon1">할일</span>
						<input
							type="text"
							class="form-control"
							placeholder="할일..."
							name="work"
							aria-describedby="basic-addon1"
							required
						/>
						<button class="btn btn-outline-success" id="btn">
							저장
						</button>
					</div>
				</form>
				<hr />
				<p>할일 목록</p>
				<% @to_do_lists.each do |t|%> 
					<% if t.user == current_user.email %> 
						<% if t.id == @to_do_list.id %>
							<form action="/to_do_lists/edit/<%= t.id %>" method="post">
								<input
									name="authenticity_token"
									value="<%= form_authenticity_token %>"
									type="hidden"
								/>
								<div class="input-group">
									<input
										type="text"
										class="form-control"
										id="<%= t.id %>"
										alt="<%= t.date %>"
										value="<%= t.work %>"
										name="work"
									/>
									<button class="btn btn-outline-success" type="submit">
										저장
									</button>
									<button class="btn btn-outline-success" type="button" onclick="location.href = '/to_do_lists'">
										취소
									</button>
								</div>
							</form>
						<% else %>
							<form action="/to_do_lists/delete/<%= t.id %>" method="post">
								<input
									name="authenticity_token"
									value="<%= form_authenticity_token %>"
									type="hidden"
								/>
								<div class="div">
									<span class="worklist list" id="<%= t.date %>" alt="<%= t.id %>"><%= t.work %></span>
									<button
										type="submit"
										class="list-delete btn-close list"
										data-bs-dismiss="offcanvas"
										aria-label="Close"
									></button>
								</div>
							</form>
						<% end %>
					<% end %>
				<% end %>
			</div>
		</div>
	</body>
</html>